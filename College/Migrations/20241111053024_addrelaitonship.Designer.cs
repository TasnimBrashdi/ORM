// <auto-generated />
using System;
using College;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace College.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241111053024_addrelaitonship")]
    partial class addrelaitonship
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("College.Models.Course", b =>
                {
                    b.Property<int>("CId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CId"));

                    b.Property<string>("CName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DeptID")
                        .HasColumnType("int");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.HasKey("CId");

                    b.HasIndex("DeptID");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("College.Models.Department", b =>
                {
                    b.Property<int>("DId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DId"));

                    b.Property<string>("DName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("College.Models.Exams", b =>
                {
                    b.Property<string>("ExCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DEPtId")
                        .HasColumnType("int");

                    b.Property<string>("Room")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("date")
                        .HasColumnType("date");

                    b.Property<TimeOnly>("time")
                        .HasColumnType("time");

                    b.HasKey("ExCode");

                    b.HasIndex("DEPtId");

                    b.ToTable("Exams");
                });

            modelBuilder.Entity("College.Models.FPhone", b =>
                {
                    b.Property<int>("fcId")
                        .HasColumnType("int");

                    b.Property<string>("NUM")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("fcId", "NUM");

                    b.ToTable("fPhones");
                });

            modelBuilder.Entity("College.Models.Faculty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DEID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("DEID");

                    b.ToTable("Faculties");
                });

            modelBuilder.Entity("College.Models.Hostel", b =>
                {
                    b.Property<int>("HID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HID"));

                    b.Property<string>("HName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NOSeats")
                        .HasColumnType("int");

                    b.HasKey("HID");

                    b.ToTable("Hostels");
                });

            modelBuilder.Entity("College.Models.SPhone", b =>
                {
                    b.Property<int>("StuID")
                        .HasColumnType("int");

                    b.Property<string>("SuNum")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("StuID", "SuNum");

                    b.ToTable("SPhones");
                });

            modelBuilder.Entity("College.Models.Student", b =>
                {
                    b.Property<int>("SId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SId"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("FName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("FacId")
                        .HasColumnType("int");

                    b.Property<string>("LName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("PinCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("hosID")
                        .HasColumnType("int");

                    b.HasKey("SId");

                    b.HasIndex("FacId");

                    b.HasIndex("hosID");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("College.Models.Subject", b =>
                {
                    b.Property<int>("SUPID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SUPID"));

                    b.Property<int?>("Facid")
                        .HasColumnType("int");

                    b.Property<string>("SubName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SUPID");

                    b.HasIndex("Facid");

                    b.ToTable("subjects");
                });

            modelBuilder.Entity("CourseFaculty", b =>
                {
                    b.Property<int>("CoursesCId")
                        .HasColumnType("int");

                    b.Property<int>("FacultiesId")
                        .HasColumnType("int");

                    b.HasKey("CoursesCId", "FacultiesId");

                    b.HasIndex("FacultiesId");

                    b.ToTable("CourseFaculty");
                });

            modelBuilder.Entity("CourseStudent", b =>
                {
                    b.Property<int>("CoursesCId")
                        .HasColumnType("int");

                    b.Property<int>("StudentsSId")
                        .HasColumnType("int");

                    b.HasKey("CoursesCId", "StudentsSId");

                    b.HasIndex("StudentsSId");

                    b.ToTable("CourseStudent");
                });

            modelBuilder.Entity("ExamsStudent", b =>
                {
                    b.Property<string>("ExamsExCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("StudentsSId")
                        .HasColumnType("int");

                    b.HasKey("ExamsExCode", "StudentsSId");

                    b.HasIndex("StudentsSId");

                    b.ToTable("ExamsStudent");
                });

            modelBuilder.Entity("College.Models.Course", b =>
                {
                    b.HasOne("College.Models.Department", "DepID")
                        .WithMany("Courses")
                        .HasForeignKey("DeptID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DepID");
                });

            modelBuilder.Entity("College.Models.Exams", b =>
                {
                    b.HasOne("College.Models.Department", "DEPId")
                        .WithMany("Exams")
                        .HasForeignKey("DEPtId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DEPId");
                });

            modelBuilder.Entity("College.Models.FPhone", b =>
                {
                    b.HasOne("College.Models.Faculty", "IDF")
                        .WithMany("FPhones")
                        .HasForeignKey("fcId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IDF");
                });

            modelBuilder.Entity("College.Models.Faculty", b =>
                {
                    b.HasOne("College.Models.Department", "DEPID")
                        .WithMany("Faculties")
                        .HasForeignKey("DEID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DEPID");
                });

            modelBuilder.Entity("College.Models.SPhone", b =>
                {
                    b.HasOne("College.Models.Student", "SUTID")
                        .WithMany("sPhones")
                        .HasForeignKey("StuID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SUTID");
                });

            modelBuilder.Entity("College.Models.Student", b =>
                {
                    b.HasOne("College.Models.Faculty", "FACID")
                        .WithMany("Students")
                        .HasForeignKey("FacId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("College.Models.Hostel", "HostelID")
                        .WithMany("Students")
                        .HasForeignKey("hosID");

                    b.Navigation("FACID");

                    b.Navigation("HostelID");
                });

            modelBuilder.Entity("College.Models.Subject", b =>
                {
                    b.HasOne("College.Models.Faculty", "FId")
                        .WithMany("Subjects")
                        .HasForeignKey("Facid");

                    b.Navigation("FId");
                });

            modelBuilder.Entity("CourseFaculty", b =>
                {
                    b.HasOne("College.Models.Course", null)
                        .WithMany()
                        .HasForeignKey("CoursesCId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("College.Models.Faculty", null)
                        .WithMany()
                        .HasForeignKey("FacultiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CourseStudent", b =>
                {
                    b.HasOne("College.Models.Course", null)
                        .WithMany()
                        .HasForeignKey("CoursesCId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("College.Models.Student", null)
                        .WithMany()
                        .HasForeignKey("StudentsSId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ExamsStudent", b =>
                {
                    b.HasOne("College.Models.Exams", null)
                        .WithMany()
                        .HasForeignKey("ExamsExCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("College.Models.Student", null)
                        .WithMany()
                        .HasForeignKey("StudentsSId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("College.Models.Department", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("Exams");

                    b.Navigation("Faculties");
                });

            modelBuilder.Entity("College.Models.Faculty", b =>
                {
                    b.Navigation("FPhones");

                    b.Navigation("Students");

                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("College.Models.Hostel", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("College.Models.Student", b =>
                {
                    b.Navigation("sPhones");
                });
#pragma warning restore 612, 618
        }
    }
}
